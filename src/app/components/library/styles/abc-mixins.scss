@import "./abc-constants.scss";

@function getSize($relativeUnits) {
	$useRem: true; // Set to false if you want to use pixel values
	$baseFontSize: 10; // Base font-size in pixels

	@if $useRem {
		@return #{$relativeUnits / $baseFontSize}rem;
	} @else {
		@return #{$relativeUnits}px;
	}
}

@mixin customScrollBar(
		$selector,
		$width: 10px,
		$trackBackground: getConstant($color-palette, "white"),
		$thumbBackground: getConstant($color-palette, "border"),
		$thumbBorderRadius: 10px,
		$thumbHoverBackground: getConstant($color-palette, "blue-gray")
	) {
	// Webkit Browsers - includes Google Chrome, Opera and Safari
	::-webkit-scrollbar {
		width: $width;
	}

	::-webkit-scrollbar-track {
		background: $trackBackground;
		box-shadow: inset 0 0 10px 10px $trackBackground;
    	border: solid 5px transparent;
	}

	::-webkit-scrollbar-thumb {
		background-color: $thumbBackground; 
		border-radius: $thumbBorderRadius;
		box-shadow: inset 0 0 10px 10px $thumbBackground;
    	border: solid 2.5px $trackBackground;
	}

	::-webkit-scrollbar-thumb:hover {
		background-color: $thumbHoverBackground; 
	}

	// Non-Webkit Browsers - includes Firefox and IE
	#{$selector} {
		// Firefox supports two properties, solor and width. Webkit and IE properties will not apply to Firefox.
		scrollbar-color: $thumbBackground $trackBackground;
		@if ($width <= 10px) {
			scrollbar-width: thin;
		}

		// Properties supported by IE. Webkit and Firefox properties will not apply to IE.
		scrollbar-arrow-color: $trackBackground;
		scrollbar-track-color: $trackBackground;
		scrollbar-shadow-color: $thumbBackground;
		scrollbar-face-color: $thumbBackground;
	}
}

// This is used to display an ellipsis after text when it doesn't fit inside a container
@mixin textOverflow() {
	white-space: nowrap;
	text-overflow: ellipsis !important;
	overflow: hidden;
}

@mixin customPlaceholder() {
	::-moz-placeholder {
		@content;
	}

	:-ms-input-placeholder {
		@content;
	}

	::-ms-input-placeholder {
		@content;
	}

	::-webkit-input-placeholder {
		@content;
	}

	::placeholder {
		@content;
	}
}

@mixin clearAutofillColor($selector, $color: getConstant($color-palette, "white")) {
	#{$selector}:-webkit-autofill,
	#{$selector}:-webkit-autofill:hover,
	#{$selector}:-webkit-autofill:focus,
	#{$selector}:-webkit-autofill:active {
		box-shadow: 0 0 0 30px $color inset !important;
		-webkit-box-shadow: 0 0 0 30px $color inset !important;
	}
}

@mixin isIosDevice() {
	@supports (-webkit-touch-callout: none) {
		@content;
	}
}

@mixin isMacSafari() {
	@media not all and (min-resolution: 0.001dpcm) {
		@supports (-webkit-appearance: none) {
			@content;
		}
	}
}

@mixin isIEBrowser($includeEdge: false) {
	@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
		@content;
	}

	@if $includeEdge {
		@supports (-ms-ime-align:auto) {
			@content;
		}
	}
}

@mixin isFirefoxBrowser() {
	@-moz-document url-prefix() {
		@content;
	}
}